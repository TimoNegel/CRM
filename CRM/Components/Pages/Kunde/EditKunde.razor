@attribute [Authorize]
@page "/kunde/edit/{Id:guid}"

<MudText Typo="Typo.h4" Class="mb-2" Style="font-weight:600; color:#1976d2;">Kunde bearbeiten</MudText>
<br />

<MudForm Class="pa-4"
         Style="border-radius:16px; box-shadow:0 4px 24px #00000014,0 1.5px 4px #0000000a; border:1px solid #e0e0e0; background:#fff;"
         onsubmit="@UpdateKunde" Model="kunde">
    <MudTextField @bind-Value="kunde.Firmenname" Label="Firmenname" Required="true" Style="margin-bottom:14px;" />
    <MudTextField @bind-Value="kunde.AnsprechpartnerVorname" Label="Ansprechpartner Vorname" Required="true" Style="margin-bottom:14px;" />
    <MudTextField @bind-Value="kunde.AnsprechpartnerNachname" Label="Ansprechpartner Nachname" Required="true" Style="margin-bottom:14px;" />
    <MudTextField @bind-Value="kunde.Tel" Label="Telefonnummer" Required="true" Style="margin-bottom:14px;" />
    <MudTextField @bind-Value="kunde.Email" Label="E-Mail" Required="true" Style="margin-bottom:14px;" />
    <MudTextField @bind-Value="kunde.Adresse.Strasse" Label="Straße" Required="true" Style="margin-bottom:14px;" />
    <MudTextField @bind-Value="kunde.Adresse.Hausnummer" Label="Hausnummer" Required="true" Style="margin-bottom:14px;" />
    <MudTextField @bind-Value="kunde.Adresse.Ort" Label="Ort" Required="true" Style="margin-bottom:14px;" />
    <MudTextField @bind-Value="kunde.Adresse.PLZ" Label="PLZ" Required="true" Style="margin-bottom:14px;" />
    <MudTextField @bind-Value="kunde.Adresse.Land" Label="Land" Required="true" Style="margin-bottom:14px;" />

    <MudButton ButtonType="ButtonType.Submit"
               Variant="Variant.Filled"
               Color="Color.Primary"
               Style="border-radius:8px; min-width:140px; margin-top:12px;">
        Änderungen speichern
    </MudButton>
</MudForm>

@code {
    [Parameter] 
    public Guid Id { get; set; }
    private Kunde kunde = new Kunde { Adresse = new Adresse() };

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        kunde = await context.Kunden.Include(k => k.Adresse).FirstOrDefaultAsync(k => k.Id == Id) ?? new Kunde();
    }

    private async Task UpdateKunde()
    {
        using var context = DbFactory.CreateDbContext();
        context.Kunden.Update(kunde);
        await context.SaveChangesAsync();

        Navigation.NavigateTo($"/kunden/view");
    }
}
