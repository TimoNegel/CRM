@attribute [Authorize]
@page "/service/edit/{Id:guid}"

<MudText Typo="Typo.h4">Service bearbeiten</MudText>
<br />

<MudForm Class="border-2 border-solid mud-border-primary pa-4" onsubmit="@UpdateService" Model="service">
    <MudTextField @bind-Value="service.ServiceName" Label="Service Name" Required="true" />
    <MudTextField @bind-Value="service.AufwandsZeit" Label="Aufwandszeit (hh:mm:ss)" Required="true" />
    <MudTextField @bind-Value="service.Preis" Label="Preis" Required="true" />

    <br />
    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">
        Änderungen speichern
    </MudButton>
</MudForm>

@code {
    [Parameter] public Guid Id { get; set; }
    private Service service = new Service();

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        service = await context.Services.FirstOrDefaultAsync(s => s.Id == Id) ?? new Service();
    }

    private async Task UpdateService()
    {
        using var context = DbFactory.CreateDbContext();
        context.Services.Update(service);
        await context.SaveChangesAsync();

        Navigation.NavigateTo($"/services/view");
    }
}
